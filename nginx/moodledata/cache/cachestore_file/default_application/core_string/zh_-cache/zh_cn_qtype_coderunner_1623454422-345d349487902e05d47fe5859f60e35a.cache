a:400:{s:7:"aborted";s:27:"测试因错误而中止。";s:15:"ace_ui_notready";s:54:"Ace编辑器未准备好。重新加载页面试试？";s:16:"addingcoderunner";s:28:"添加新的CodeRunner题目";s:10:"ajax_error";s:34:"***AJAX错误。不要保存！***";s:5:"allok";s:21:"通过所有测试！";s:9:"allornone";s:102:"必须为所有测试用例提供测试代码，要么任何测试用例都不要提供测试代码。";s:12:"allornothing";s:18:"非满分即零蛋";s:17:"allornothing_help";s:442:"如果勾选了'非满分即零蛋'，则所有测试用例必须满足提交才能获得任何分数。否则，通过将所有通过的测试用例的分数相加，并将其表示为最大可能标记的分数，从而获得分数。

只有在未选中'非满分即零蛋'复选框时，才能指定每个测试用例标记。

如果使用一个模板分级器，将部分分数授予测试用例，通常应取消'非满分即零蛋'。";s:16:"allowattachments";s:12:"允许附件";s:21:"allowattachments_help";s:443:"是否允许学生在他们的提交文件中添加附件，如果允许，有多少。附件被复制到运行时工作目录中，并且在Twig变量{{ ATTACHMENTS }}中为模板提供了一个逗号分隔的附件名称列表。警告：对于具有大型类和/或大型附件的Moodle和Jobe服务器，允许附件可能会影响性能或磁盘空间。2019年2月之前的Moodle服务器和Jobe服务器无限期地存储所有附件。";s:16:"allowedfilenames";s:18:"允许的文件名";s:21:"allowedfilenamesregex";s:35:"允许的文件名(正则表达式)";s:21:"allowedfilenames_help";s:551:"如果不是空的，所有上载的文件名必须与给定的PHP（Perl）正则表达式匹配。例如，使用'.+\.cpp'来允许任何C++文件或'(?!Prog)\.java'允许除'Prog.java'之外的Java文件. 此外，文件名只能包含字母数字字符加下划线、连字符和句点，不能以双下划线（__）开头，并且不能与任何支持文件名冲突。'描述'是向学生显示的文本消息，用于解释预期的文件。保留为空以显示正则表达式本身。将两者都保留为空以绕过正则表达式检查。";s:19:"allowmultiplestdins";s:18:"允许多个输入";s:6:"answer";s:6:"答案";s:12:"answerprompt";s:9:"答案：";s:11:"answer_help";s:226:"可以在此处输入示例答案，供问题作者检查，并可以选择在查看过程中向学生显示。 批量测试器脚本也使用它。 保存时将检查非空答案的正确性，除非未选中'保存时验证\";s:14:"answerrequired";s:21:"请提供非空答案";s:14:"answertooshort";s:50:"回答太短。 必须至少包含{$a}个字符。";s:14:"atleastonetest";s:54:"您必须为此问题至少提供一个测试用例。";s:12:"ace-language";s:9:"Ace语言";s:22:"advanced_customisation";s:12:"高级设置";s:15:"answerbox_group";s:9:"答案框";s:14:"answerboxlines";s:3:"行";s:20:"answerbox_group_help";s:216:"设置要为答案框分配的行数。这将设置控制应答框的用户界面元素（例如Ace）的最小高度。宽度设置为适合窗口。如果答案垂直或水平溢出方框，则会出现滚动条。";s:13:"answerpreload";s:21:"预检查的答案框";s:18:"answerpreload_help";s:60:"提供在此的文本将预加载到学生的答案框中。";s:11:"asolutionis";s:21:"老师的解决方法";s:17:"attachmentoptions";s:27:"附件选项 (experimental)";s:19:"attachmentsoptional";s:12:"附件可选";s:19:"attachmentsrequired";s:12:"要求附件";s:24:"attachmentsrequired_help";s:69:"此选项指定为学生提交答案打分所需的最小附件数。";s:22:"autotagbycategorytitle";s:29:"CR根据类别自动打标签";s:27:"autotagbycategoryindextitle";s:26:"CR问题自动标签功能";s:16:"badacelangstring";s:24:"不正确的ACE字符串";s:10:"badcputime";s:57:"CPU的时间限制必须留空，或为大于零的整数";s:13:"bad_dotdotdot";s:68:"误用'…'。必须在末尾，放在两个递增的惩罚数后面";s:16:"bademptyprecheck";s:51:"预提交校验失败，出现以下意外输出：";s:18:"bad_empty_splitter";s:57:"使用组合模板时，测试用例分割串不能为空";s:17:"badfilenamesregex";s:24:"非法的正则表达式";s:8:"badfiles";s:30:"不允许的文件名字: {$a}";s:11:"badjsonfunc";s:36:"未知的JSON内嵌func ({$a->func})";s:7:"badjson";s:67:"组合打分输出的JSON输出串错误。输出是：{$a->output}";s:11:"badmemlimit";s:39:"内存限制必须留空或非负整数";s:22:"bad_new_prototype_name";s:39:"新的原型名称非法：已被使用";s:12:"badpenalties";s:69:"惩罚系数必须是是范围[0，100]内的数字，以逗号分隔";s:11:"badquestion";s:15:"问题有错误";s:15:"badrandomintarg";s:37:"JSON @randomint 函数的参数错误";s:16:"badrandompickarg";s:37:"JSON @randompic 函数的参数错误";s:16:"badsandboxparams";s:69:"'其他'字段（沙盒参数）必须为空白或有效的JSON记录";s:17:"badtemplateparams";s:46:"模板参数必须为空或有效的JSON记录";s:11:"baduiparams";s:51:"UI parameters must be blank or a valid JSON record.";s:16:"brokencombinator";s:108:"期望{$a->numtests}测试结果，得到{$a->numresults}。可能是输出过多或题目本身有错误？";s:20:"brokentemplategrader";s:117:"来自打分器的错误输出：{$a->output}。程序执行可能已中止（例如超时或超出内存限制）。";s:18:"bulkquestiontester";s:202:"<a href="{$a->link}">批测试脚本</a>测试当前上下文中所有问题的示例答案是否正确打分。只有在添加了一些带有示例答案的问题时才有用；初始安装时没有。";s:20:"bulktestallincontext";s:12:"测试所有";s:24:"bulktestcontinuefromhere";s:36:"从这里开始重新或继续运行";s:18:"bulktestindextitle";s:11:"CR批测试";s:11:"bulktestrun";s:69:"运行系统中所有问题的所有测试（慢！仅限管理员）";s:13:"bulktesttitle";s:27:"测试在 {$a} 中的题目";s:20:"coderunnercategories";s:17:"CR题目的类别";s:18:"coderunnercontexts";s:20:"CR题目的上下文";s:10:"coderunner";s:12:"程序代码";s:34:"coderunner_install_testsuite_title";s:46:"适用于CodeRunner的测试套件示例答案";s:39:"coderunner_install_testsuite_title_desc";s:104:"<a href="{$a-> link}'>示例答案测试脚本</a>验证带有示例答案的问题是否正确执行。";s:34:"coderunner_install_testsuite_intro";s:85:"此页面使您可以测试带有示例答案的CodeRunner问题是否正常运行。";s:37:"coderunner_install_testsuite_failures";s:21:"测试失败的用例";s:37:"coderunner_install_testsuite_noanswer";s:27:"不带示例答案的问题";s:15:"coderunner_help";s:156:"对一个问题作答，不管该问题是程序片段、函数或整个程序，作答者以一种满足该规范的指定计算机语言输入源代码。";s:15:"coderunner_link";s:24:"question/type/coderunner";s:24:"coderunner_question_type";s:17:"CR题目类型：";s:18:"coderunnersettings";s:8:"CR设置";s:17:"coderunnersummary";s:93:"答案是程序代码，在一组测试用例的上下文中执行，以确定其正确性。";s:14:"coderunnertype";s:12:"问题类型";s:19:"coderunnertype_help";s:128:"选择编程语言和问题类型。选择类型后，可以在下面的'问题类型详细信息'面板中查看详细信息。";s:14:"columncontrols";s:9:"结果表";s:19:"columncontrols_help";s:66:"复选框，选择提交后应向学生显示结果表的哪些列";s:15:"confirm_proceed";s:108:"如果在未选中'定制'的情况下保存此问题，则所做的任何定制都将丢失。 继续吗？";s:12:"confirmreset";s:90:"舍弃您在此问题上的所有工作，并将答案框重置为原始的预加载值？";s:7:"cputime";s:26:"CPU运行时间限制(秒)";s:21:"customisationcontrols";s:6:"定制";s:9:"customise";s:6:"定制";s:13:"customisation";s:6:"定制";s:9:"datafiles";s:12:"支持文件";s:14:"datafiles_help";s:148:"执行扩展模板程序时，此处上载的所有文件都将添加到工作目录中。 这样可以方便地添加大量数据或支持文件。";s:22:"default_penalty_regime";s:21:"默认的惩罚系数";s:27:"default_penalty_regime_desc";s:145:"用于新问题的默认惩罚机制，包括用逗号分隔的惩罚百分比列表，可选地以", ..."结尾以表示等差数列的系数。";s:7:"display";s:6:"显示";s:20:"downloadquizattempts";s:21:"下载测验的答卷";s:24:"downloadquizattemptshelp";s:217:"单击您要下载的课程和测验的相应课程和/或下载按钮。 课后括号中的数字是至少提交一
         次的课程中测验的数量。 测验名称后面括号中的数字是提交的数字。";s:17:"editingcoderunner";s:20:"编辑一个CR题目";s:24:"empty_new_prototype_name";s:33:"新的问题类型名不能为空";s:18:"emptypenaltyregime";s:48:"惩罚系数必须定义（从版本3.1开始）";s:6:"enable";s:6:"激活";s:16:"enablecombinator";s:18:"启用组合打分";s:17:"enable_diff_check";s:28:"启用 '查看差异' 按钮";s:22:"enable_diff_check_desc";s:110:"如果学生回答错误并使用完全匹配验证器，则向他们显示'显示差异'按钮（实验性）";s:19:"enable_sandbox_desc";s:54:"允许使用指定的沙箱运行学生提交的内容";s:14:"equalitygrader";s:12:"精确匹配";s:23:"error_loading_prototype";s:64:"加载原型出错，可能是网络问题或服务器down机？";s:22:"error_loading_ui_descr";s:71:"Error loading UI description. Network problems or server down, perhaps?";s:11:"erroroninit";s:61:"**** ERROR WHEN INITIALISING QUESTION ****<br>{$a->error}<br>";s:14:"errorstring-ok";s:6:"确定";s:21:"errorstring-autherror";s:21:"未授权使用沙盒";s:19:"errorstring-jobe400";s:37:"从Jobe服务器发来的错误信息";s:20:"errorstring-overload";s:75:"因为服务器过载导致任务没有被运行。过一会再试试吧？";s:25:"errorstring-pastenotfound";s:24:"请求的任务不存在";s:23:"errorstring-wronglangid";s:24:"请求的语言不存在";s:24:"errorstring-accessdenied";s:21:"访问沙盒被拒绝";s:35:"errorstring-submissionlimitexceeded";s:36:"提交沙盒请求达到限制次数";s:28:"errorstring-submissionfailed";s:24:"提交沙盒验证失败";s:19:"errorstring-unknown";s:113:"执行代码时发生意外错误。 沙盒服务器可能已关闭或过载。 也许不久之后再试一次？";s:6:"expand";s:6:"展开";s:11:"expandtitle";s:18:"显示问题类别";s:8:"expected";s:12:"期望输出";s:14:"expectedcolhdr";s:15:"期望的结果";s:13:"expected_help";s:57:"测试的预期输出。模板显示为 {{TEST.expected}}";s:18:"exportthisquestion";s:15:"输出本题目";s:23:"exportthisquestion_help";s:153:"这将创建一个仅包含此问题的Moodle XML导出文件。 如果您想向开发人员报告CodeRunner中的一个错误，那么这个很有用。";s:5:"extra";s:21:"其余的模板数据";s:10:"extra_help";s:74:"模板使用的有时有用的额外文本字段，以{{TEST.extra}}访问";s:4:"fail";s:6:"失败";s:5:"fails";s:6:"失败";s:12:"failedhidden";s:51:"您的代码未通过一项或多项隐藏测试。";s:12:"failedntests";s:35:"失败了 {$a->numerrors} 个用例";s:13:"failedtesting";s:15:"失败的测试";s:8:"feedback";s:6:"反馈";s:13:"feedback_quiz";s:18:"本测验设置的";s:13:"feedback_show";s:12:"强制输出";s:13:"feedback_hide";s:12:"强制隐藏";s:13:"feedback_help";s:183:"选择'通过测验设置'以允许测验反馈设置来控制结果表的显示，选择'强制显示'以显示结果表，无论如何都可以使用'强制隐藏'来隐藏结果表";s:10:"fileheader";s:12:"支持文件";s:16:"filenamesexplain";s:6:"描述";s:14:"filenamesregex";s:15:"正则表达式";s:16:"filloutoneanswer";s:120:"您必须输入符合规范的源代码。您输入的代码将被执行，以确定其正确性，并相应地打分。";s:12:"firstfailure";s:37:"第一个失败的测试用例：{$a}";s:10:"forexample";s:6:"例如";s:28:"gapfillerui_delimiters_descr";s:77:"A 2-character array of the strings used to open and close the gap description";s:27:"gapfillerui_ui_source_descr";s:132:""globalextra" to take the HTML to display from the globalextra field or "test0" to take it from the testcode field of the first test";s:36:"gapfillerui_sync_interval_secs_descr";s:123:"The time interval in seconds between calls to sync the UI contents back to the question answer. 0 for no such auto-syncing.";s:11:"globalextra";s:21:"其他的全局选项";s:16:"globalextra_help";s:168:"模板作者通用的文本字段，例如每个测试用例的额外字段，但对所有测试都是全局的。 模板作者可以使用{{ QUESTION.globalextra }}。";s:9:"graphhelp";s:864:"- Double click at a blank space to create a new node/state.
- Double click an existing node to "mark" it e.g. as an accept state for Finite State Machines
  (FSMs). Double click again to unmark it.
- Click and drag to move a node.
- Alt click (or Ctrl Alt click) and drag to move a (sub)graph.
- Shift click inside one node and drag to another to create a link.
- Shift click on a blank space, drag to a node to create a start link (FSMs only).
- Click and drag a link to alter its curve.
- Click on a link/node to edit its text.
- Click in link text and drag to move it.
- Typing _ followed by a digit makes that digit a subscript.
- Typing \epsilon creates an epsilon character (and similarly for \alpha, \beta etc).
- Click on a link/node then press the Delete key to remove it (or function-delete on a Mac).
- Ctrl+z to undo and Ctrl+y or Ctrl+Shift+z to redo.";s:17:"goodemptyprecheck";s:6:"通过";s:9:"gotcolhdr";s:15:"得到的结果";s:6:"grader";s:9:"打分器";s:7:"grading";s:6:"打分";s:15:"gradingcontrols";s:12:"打分控制";s:20:"gradingcontrols_help";s:3903:"The default 'exact match' grader
awards marks only if the output from the run exactly matches the expected value defined
by the testcase. Trailing white space is stripped from all lines, and any trailing
blank lines are deleted, before the
equality test is made.

The near-equality grader is similar except that it
also collapses multiple spaces and tabs to a single space, deletes all blank
lines and converts the strings to lower case.

The 'regular expression' grader uses the 'expected'
field of the test case as a regular expression (without PERL-type delimiters)
and tests the output to see
if a match to the expected result can be found anywhere within the output. For
example, an expected value of 'ab.*z' would match any output that contains the
the characters 'ab' anywhere in the output and a 'z' character somewhere later.
To force matching of the entire output, start and end the regular expression
with '\A' and '\Z' respectively. Regular expression matching uses MULTILINE
and DOTALL options.

The 'template grader' option assumes that the output
from the program is actually a
grading result, i.e. that the template tests *and grades* the student answer.
The only output from such a template program must be a JSON-encoded record.

If the template is a per-test template (i.e., not a combinator), the JSON string must describe a row of the
results table and should contain at least a 'fraction' field, which is multiplied by TEST.mark to decide how
many marks the test case is awarded. It should usually also contain a 'got'
field, which is the value displayed in the 'Got' column of the results table.
The other columns of the results table (testcode, stdin, expected) can also
be defined by the template grading program and will be used instead of the values from
the testcase. As an example, if the output of the program is the string
<code>{"fraction":0.5, "got": "Half the answers were right!"}</code>, half marks would be
given for that particular test case and the 'Got' column would display the
text "Half the answers were right!". Other columns can be added to the result
table by adding extra attributes to the JSON record and also to the question's
Result Columns field.

If the template is a combinator, the JSON string output by the template grader
should again contain a 'fraction' field, this time for the total mark,
and may contain zero or more of 'prologuehtml', 'testresults',
'epiloguehtml', 'columnformats', 'showoutputonly' and 'showdifferences'.
The 'prologuehtml' and 'epiloguehtml' fields are html
that is displayed respectively before and after the (optional) result table. The
'testresults' field, if given, is a list of lists used to display some sort
of result table. The first row is the column-header row and all other rows
define the table body. Two special column header values exist: 'iscorrect'
and 'ishidden'. The 'iscorrect' column(s) are used to display crosses or
ticks for 0 and 1 respectively. The 'ishidden' column isn't
actually displayed but 0 or 1 values in the column can be used to turn on and
off row visibility. Students do not see hidden rows but markers and other
staff do. If a 'testresults' table is supplied an optional
'columnformats' field can also be supplied. This should be a list
of strings, one per column excluding the 'iscorrect' and the 'ishidden'
columns. The strings specify the format to be used to display the cell values;
currently the only supported formats are '%s' for a normal string display
(which is sanitised and wrapped in a 'pre' element) and '%h' for an html
value that should not be further processed before display.
The 'showdifferences' field turns on display of a 'Show Differences'
button after the results table if the awarded mark fraction is not 1.0.
The 'showoutputonly' field, if true, is used when the question is to be
used only to display the output and perhaps images from a run, with no mark.
";s:29:"graph_ui_invalidserialisation";s:30:"GraphUI: invalid serialisation";s:19:"graphui_isfsm_descr";s:156:"True if the graph represents a Finite State Machine, in which case it can contain an incoming edge from nowhere (the start edge) and can have 'accept' nodes";s:24:"graphui_isdirected_descr";s:26:"True if edges are directed";s:24:"graphui_noderadius_descr";s:30:"The radius of a node in pixels";s:22:"graphui_fontsize_descr";s:54:"The font size in points used for node and edge labels.";s:26:"graphui_helpmenutext_descr";s:103:"Text which if non-empty replaces the standard help menu text defined in the CodeRunner language strings";s:24:"graphui_textoffset_descr";s:87:"The offset in pixels of a link label from its link (deprecated - use dragging instead).";s:31:"graphui_locknodepositions_descr";s:265:"If true, prevents the user from moving nodes. Useful when the answer box is preloaded with a graph that the student has to annotate by changing node or edge labels or by adding/removing edges. Note, though that nodes can still be added and deleted. See locknodeset.";s:25:"graphui_locknodeset_descr";s:102:"If true, prevents the the user from adding or deleting nodes or toggling node types to/from acceptors.";s:28:"graphui_locknodelabels_descr";s:112:"If true, prevent the user from editing node labels. This will also prevent any new nodes having non-empty labels";s:31:"graphui_lockedgepositions_descr";s:405:"If true prevents the user from dragging edges to change their curvature. Possibly useful if the answer box is preloaded with a graph that the student has to annotate by changing node or edge labels or by adding/removing edges. Also ensures that edges added by a student are straight, e.g. to draw a polygon on a set of given points. Note, though that edges can still be added and deleted. See lockedgeset.";s:25:"graphui_lockedgeset_descr";s:56:"If true prevents the user from adding or deleting edges.";s:28:"graphui_lockedgelabels_descr";s:103:"True to prevent the user from editing edge labels. This also prevents any new edges from having labels.";s:6:"hidden";s:6:"隐藏";s:9:"hidecheck";s:10:"Hide check";s:11:"hidedetails";s:12:"Hide details";s:15:"hidedifferences";s:12:"隐藏差异";s:4:"HIDE";s:6:"隐藏";s:12:"HIDE_IF_FAIL";s:21:"如果失败了隐藏";s:15:"HIDE_IF_SUCCEED";s:21:"如果成功了隐藏";s:14:"hiderestiffail";s:36:"如果失败了隐藏其余的用例";s:19:"hoisttemplateparams";s:18:"提拉模板参数";s:12:"howtogetmore";s:95:"关更多详细信息，请选中'在保存时验证'以保存问题，然后手动进行测试";s:31:"htmlui_sync_interval_secs_descr";s:123:"The time interval in seconds between calls to sync the UI contents back to the question answer. 0 for no such auto-syncing.";s:18:"illegaluiparamname";s:64:"The following are not valid parameters for the {$a->uiname} UI: ";s:20:"iscombinatortemplate";s:15:"是否组合式";s:11:"ideone_user";s:22:"Ideone 服务器用户";s:16:"ideone_user_desc";s:93:"连接到已弃用的Ideone服务器时要使用的登录名（如果启用了ideone沙箱）";s:11:"ideone_pass";s:22:"Ideone 服务器密码";s:16:"ideone_pass_desc";s:87:"连接到已弃用的Ideone服务器时使用的密码（如果启用了ideone沙箱）";s:16:"info_unavailable";s:48:"问题类型信息不适用于自定义问题。";s:13:"illegalformat";s:45:"非法格式 ({$a->format}) 在'列格式'中";s:11:"inputcolhdr";s:6:"输入";s:23:"insufficientattachments";s:33:"附件不够数, 要求 {$a} 个.";s:12:"is_prototype";s:12:"用于原型";s:11:"jobe_apikey";s:16:"Jobe的API密钥";s:16:"jobe_apikey_desc";s:141:"The API key to be included in all REST requests to the Jobe server (if required). Max 40 chars. Leave blank to omit the API Key from requests";s:9:"jobe_host";s:13:"Jobe服务器";s:14:"jobe_host_desc";s:436:"The host name of the Jobe server plus the port number if other than port 80, e.g. jobe.somewhere.edu:4010. The URL for the Jobe request is obtained by default by prefixing this string with http:// and appending /jobe/index.php/restapi/<REST_METHOD>. You may either specify the https:// protocol in front of the host name (e.g. https://jobe.somewhere.edu) if the Jobe server is set behind a reverse proxy which act as an SSL termination.";s:17:"jobe_warning_html";s:319:"<p style='background-color:yellow'>Run using the University of Canterbury's Jobe server. This is for initial testing only. Please set up your own Jobe server as soon as possible. See <a href='https://github.com/trampgeek/moodle-qtype_coderunner/blob/master/Readme.md#sandbox-configuration' target='_blank'>here</a>.</p>";s:20:"jobe_canterbury_html";s:114:"<p style='color:gray; font-style:italic; font-size:smaller'>Run on the University of Canterbury's Jobe server.</p>";s:8:"language";s:12:"沙盒语言";s:9:"languages";s:6:"语言";s:14:"languages_help";s:1798:"The sandbox language is the computer language used
to run the submission. This should not usually need altering from the value in the
parent template; tweak it at your peril.

Ace-language is the
language used by the Ace code editor (if enabled) for the student's answer.
By default this is the same as the sandbox language; enter a different
value here only if the template language is different from the language
that the student is expected to write (e.g. if a Python template is
used to preprocess a student's C program and then execute it in a subprocess).

Multi-language questions, that is questions that students can answer in
more than one language, are enabled by setting the Ace-language to a comma-separated
list of languages. Students are then presented with a drop-down menu to select
the language in which their answer is written. If exactly one of the languages
has an asterisk ('\*') appended, that language is chosen as the default language,
which is selected as the initial state of the drop-down menu. For example,
an Ace-language value of "C,C++,Java\*,Python3" would allow student to submit in
C, C++, Java or Python3 but the drop-down menu would initially show Java which
would be the default. If no default is specified the
initial state of the drop-down is empty and the student must choose a language.
Multilanguage questions require a special template that uses the {{ANSWER\_LANGUAGE}}
template variable to control how to execute the student code. See the built-in
sample multilanguage question type. The {{ANSWER\_LANGUAGE}} variable is defined
<i>only</i> for multilanguage questions.

If the author wishes to supply a sample answer to a multilanguage question,
they must write it in the default language, if specified, or the
first of the allowed languages otherwise.";s:19:"languageselectlabel";s:6:"语言";s:14:"legacyuiparams";s:139:"UI parameters can no longer be defined within the template parameters field. Please move the following to the UI parameters field instead: ";s:15:"legacyuiparams2";s:176:"UI parameters can no longer be defined within the template parameters field. Please move the following to the UI parameters field instead, removing the '{$a->uiname}_' prefix: ";s:4:"mark";s:6:"得分";s:7:"marking";s:15:"Mark allocation";s:12:"markinggroup";s:6:"得分";s:17:"markinggroup_help";s:1309:"If 'All-or-nothing' is checked, all test cases must be satisfied
for the submission to earn any marks. Otherwise, the mark is obtained
by summing the marks for all the test cases that pass
and expressing this as a fraction of the maximum possible mark.
The per-test-case marks can be specified only if the all-or-nothing
checkbox is unchecked. If using a template grader that awards
part marks to test cases, 'All-or-nothing' should generally be unchecked.

The mandatory penalty regime is a comma-separated list of penalties (each a percent)
to apply to successive submissions. These are absolute, not cumulative. As a
special case the last penalty can be '...' to mean "extend the previous
two penalties as an arithmetic progression up to 100". For example,
<code>0,5,10,30,...</code> is equivalent to <code>0,5,10,30,50,70,90,100</code>.
If there are more submissions than defined penalties, the last value is used.
Spaces can be used in lieu of commas as a separator.

The default penalty regime can be set site-wide by a system administrator using
Site administration > Plugins > Question types > CodeRunner.

Set the penalty regime to '0' for zero penalties on all submissions.

The penalty regime is ignored and no penalties are applied if the quiz is
run using the 'Adaptive (no penalties)' behaviour.";s:11:"maxfilesize";s:39:"最大允许的文件大小（字节）";s:16:"maxfilesize_help";s:140:"选择最大文件上传大小（字节）。 允许使用大类上传大文件会影响Moodle和Jobe服务器上的性能和磁盘空间。";s:11:"memorylimit";s:17:"内存限制 (MB)";s:14:"missinganswers";s:12:"缺少答案";s:20:"missingorbadfraction";s:89:"Bad or missing fraction in output from combinator grader output. Output was: {$a->output}";s:13:"missingoutput";s:48:"您必须提供此测试用例的预期输出。";s:16:"missingprototype";s:250:"This question was defined to be of type '{$a->crtype}' but the prototype does not exist, or is non-unique, or is unavailable in this context. You should Cancel and try to (re)install the prototype.
Proceed to edit only if you know what you are doing!";s:17:"missingprototypes";s:12:"缺少原型";s:27:"missingprototypewhenrunning";s:66:"Broken question (missing prototype '{$a->crtype}'). Cannot be run.";s:15:"missinguiparams";s:58:"The following UI parameters are required but not defined: ";s:16:"multipledefaults";s:36:"默认最多可以选择一种语言";s:18:"multipleprototypes";s:44:"Multiple prototypes found for '{$a->crtype}'";s:16:"mustrequirefewer";s:57:"您所需要的附件数量不能超过允许的数量。";s:18:"nearequalitygrader";s:18:"几乎完全匹配";s:18:"nodetailsavailable";s:51:"选择一个问题类型以查看详细的帮助。";s:14:"nouiparameters";s:45:"The {$a->uiname} UI does not take parameters.";s:7:"noqtype";s:21:"未选择问题类型";s:10:"morehidden";s:42:"一些隐藏的测试用例也失败了。";s:15:"noerrorsallowed";s:82:"您的代码必须通过所有测试才能获得任何分数。 再试一次吧。";s:14:"nonnumericmark";s:15:"非数字打分";s:14:"nosampleanswer";s:18:"没有示例答案";s:18:"negativeorzeromark";s:21:"分数必须大于零";s:7:"options";s:6:"选项";s:8:"ordering";s:6:"排序";s:13:"overallresult";s:12:"总体结果";s:14:"overloadoninit";s:57:"Sandbox server overload prevented question initialisation";s:6:"passes";s:6:"通过";s:13:"penaltyregime";s:22:"(惩罚系数: {$a} %)";s:18:"penaltyregimelabel";s:15:"惩罚系数：";s:4:"pass";s:6:"通过";s:10:"pluginname";s:10:"CodeRunner";s:16:"pluginnameadding";s:20:"增加一个CR题目";s:17:"pluginnameediting";s:20:"编辑一个CR题目";s:17:"pluginnamesummary";s:52:"CodeRunner：在沙箱中运行学生提交的代码";s:15:"pluginname_help";s:257:"Use the 'Question type' combo box to select the
computer language and question type that will be used to run the student's submission.
Specify the problem that the student must write code for, then define
a set of tests to be run on the student's submission";s:15:"pluginname_link";s:16:"题目/类型/CR";s:8:"precheck";s:18:"提交前预检查";s:17:"precheck_disabled";s:6:"禁用";s:14:"precheck_empty";s:3:"空";s:17:"precheck_examples";s:6:"例子";s:17:"precheck_selected";s:9:"选择的";s:12:"precheck_all";s:9:"全部的";s:13:"precheck_help";s:1109:"如果启用了'预检查'，则学生将在通常的检查按钮的左侧有一个额外的按钮，使他们可以避免罚分
去运行测试，以对照问题的部分测试用例，检查其代码的正确性。

如果选择'空'，则将使用一个测试用例对每个测试模板进行一次运行，其中所有字段（测试代码，标
准输入，期望输出等）均为空字符串。非空输出被视为预检查失败。请谨慎使用：
某些问题类型将无法正确处理此问题，例如那些有生成输出的'编写程序'类型的问题。

如果选择了'例子'，则将针对所有已检查'用作例子'的测试用例来测试代码的正确性。

如果选择'选中的'，则会向每个测试用例添加一个额外的UI元素，以允许教师选择测试的特定子集。

如果选择'全部的'，则将运行所有测试用例（如果模板代码选择的话，尽管它们的行为可能与正常的
Check不同）。

模板可以使用Twig参数{{ IS_PRECHECK }}来检查运行是否为'预检查'运行，在预检查运行期间
为'1'，否则为'0'。";s:13:"precheck_only";s:15:"仅是预检查";s:19:"precheckingemptyset";s:51:"设置了预检查示例，但没有任何示例！";s:16:"privacy:metadata";s:69:"The CodeRunner question type plugin does not store any personal data.";s:19:"proceed_at_own_risk";s:65:"Editing a built-in question prototype?! Proceed at your own risk!";s:17:"prototypecontrols";s:6:"原型";s:14:"prototypeusage";s:41:"CodeRunner课程{$a}的问题原型用法";s:19:"prototypeusageindex";s:15:"可用的课程";s:22:"prototypecontrols_help";s:1062:"If 'Is prototype' is true, this question becomes a prototype for other questions.
After saving, the specified question type name will appear in the dropdown list
of question types. New questions based on this type will then by default inherit
all the customisation attributes specified for this question. Subsequent changes
to this question will then affect all derived questions unless they are
themselves customised, which breaks the connection.

Prototypal inheritance is
single-level only, so this question, when saved as a prototype, loses its
connection to its original base type, becoming a new base type in its own right.
Be warned that when exporting derived questions you must ensure that this
question is included in the export, too, or the derived question will be an
orphan when imported into another system. Also, you are responsible for keeping
track of which questions you are using as prototypes; it is strongly recommended
that you rename the question to something like 'PROTOTYPE_for_my_new_question_type'
to make subsequentmaintenance easier.";s:15:"prototype_error";s:44:"***原型加载失败。 不要保存！ ***";s:22:"prototype_load_failure";s:21:"原型加载错误：";s:10:"prototypeQ";s:12:"是原型？";s:16:"qtype_c_function";s:1155:"<p>C函数编写问题类型。学生的答案应该是完整的C函数，但可以选择在其前面添加其他自包含的C代码，
例如预处理器指令和支持函数。</p>
<p>针对此类问题的测试代码通常会调用学生的函数，传入某些测试参数，并输出结果，例如
<pre>printf("%d\n", someIntFunction(blah1, blah2))</pre>
测试用例的<i>期望输出</i>字段是测试的预期输出。</p>
<p>如果没有为任何测试用例提供标准输入，那么将构建一个测试程序，其中包括：</p>
<ol>
<li>以下标准的 #includes：stdlib.h，ctype.h，string.h，stdbool.h，math.h </ li>
<li>学生的答案。</li>
<li>对于每个给定的测试用例，用括号括起来的一系列块序列。每个块仅包含测试用例的测试代码。在
代码块之间还添加了一个<i>printf</i>语句，以打印一个特殊的分隔串，该分隔串用于将输出拆分回
各个测试用例输出。</li>
</ol>
<p>但是，如果任何测试用例具有非空标准输入，则将运行多个测试程序，每个测试用例一个。</p>
<p>测试用例的<i>其余</ i>字段将被忽略。</p>";s:18:"qtype_cpp_function";s:1212:"<p>用于C++函数编写的问题类型。
学生的答案应该是一个完整的C++函数，当然可以选择在其前面加上一点代码（例如预处理器指令和
支持函数）</p>。
<p>在每个测试用例中，此类问题的测试代码通常会调用学生的函数，传入某些测试参数，并输出结果，
例如
<pre>cout << someIntFunction(blah1, blah2))</pre>
测试用例的<i>期望输出</i>字段是测试的预期输出。
<p>
如果没有为任何测试用例提供标准输入，那么将构建一个测试程序，其中包括：</p>
<ol>
<li>以下标准的 #includes: iostream, fstream, string, math, vector and algorithm</li>
<li><code>using namespace std;</code></li>
<li>学生答案</li>
<li>对于每个给定的测试用例，用括号括起来的一系列块序列。
每个块均包含测试用例的<i>其余</i>字段（通常为空），紧跟着是测试代码。在代码块之间还添加了
一个<i>printf</i>语句，以打印一个特殊的分隔串，该分隔串用于将输出拆分回各个测试用例输出。</li>
</ol>
<p>但是，如果任何测试用例具有非空标准输入，则将运行多个测试程序，每个测试用例一个。
</p>";s:15:"qtype_c_program";s:629:"<p>用于C语言写程序问题，其中没有针对每个测试用例的代码，不同的测试
只是使用不同的标准输入（stdin）数据。学生的答案应该是一个完整的可运行程序，它是按原样运行的，
不需要CodeRunner修改，每个测试用例一次。测试代码的值和每个测试用例的额外字段都将被忽略。</p>
<p>如果需要为问题设置特殊的编译或链接参数，可以对其进行自定义（单击'自定义'复选框），
打开'高级自定义'部分，并在'参数'字段中输入合适的值。例如<pre>{"linkargs":["-lm"]}</pre>链接到
数学库。";s:17:"qtype_cpp_program";s:359:"<p>用于C++编写程序的问题，其中没有按测试用例编写的代码，并且
不同的测试仅使用不同的标准输入（stdin）数据。 学生的答案应该是一个完整的可运行程序，按原样运行，无需CodeRunner修改，每个测试用例一次。 测试代码
的值和每个测试用例的多余字段都将被忽略。</p>";s:20:"qtype_directed_graph";s:2792:"<p>A python3 question type that asks the student to draw
a directed graph to satisfy some specification. The question author has to write
Python3 code to check the resulting graph.</p><p>Note that it is not actually
necessary to use this question type for directed graphs, as the functionality
is mainly provided by the GraphUI plugin. If the graph pre-processing performed
by this question type does not suit your needs, you can instead just use a normal
Python3 question (or any other language), set the UI to GraphUI, and analyse
the JSON-serialised version of the graph (the Twig STUDENT_ANSWER&nbsp; variable)
yourself. However, this question type does provide an example of how to use the
GraphUI plugin. Click <i>Customise</i>&nbsp;to see the template code.</p>
<p>The specification will ask the student to draw a directed graph to satisfy
certain requirements. It might for example be a DFA (deterministic finite-state
automaton) or a Turning machine. The test case code and/or the extra code will
then analyse the graph and print a message to the student, such as OK if the
graph is correct or a suitably informative error message otherwise.</p>
<p>The template for this question analyses the JSON-serialised graph, extracting
its topology in the form of an adjacency dictionary&nbsp;<i>graph</i>. This
variable is available to the test or extra code in the test case. Keys in the
dictionary are node names, if given, or arbitrary node identifying labels of
the form #1, #2 etc otherwise. Values in the dictionary are lists of outgoing
edges, sorted by neighbour node name or identifier, each edge being a tuple
(neighbourId, edgeLabel).</p><p>Each entry in the adjacency list is of the form
(nodeNameOrId, neighbours) where neighbours is a list of tuples
(neighbourNodeNameOrId, edgeLabel). If nodes are given names, those are used
as node identifiers, otherwise the names #1, #2 etc are used. The adjacency
list and the neighbour list are both sorted in order of node name or identifier.</p>
<p>The template is a combinator one: the <i>testcode</i>&nbsp;and
<i>extra</i>&nbsp;code are both executed for each test case.</p><p>As a simple
example, if the specification were just "Draw a directed graph with two nodes
labelled A and B, with an edge from A to B", a suitable test case (albeit with
unhelpful error output) might be:</p><pre>
if set(graph.keys()) == {'A', 'B'} and len(graph['A']) == 1 and len(graph['B']) == 0 and graph['A'][0][0] == 'B':
    print('OK')
else:
    print('Nope')
</pre>
<p>Alternatively, there could be a set of test cases, each one checking
one of the aspects of the specification. For example, the first test case might
print the sorted keys, expecting to see 'A', 'B'. The second test case might
print the outgoing edges from node 'A', and so on.</p>";s:16:"qtype_java_class";s:1337:"<p>A Java write-a-class question, where the student submits a
complete class as their answer. Each test will  typically instantiate an object of the specified
class and perform one or more tests on it. It is not a combinator question type, meaning that
each test case runs as a separate sandbox program.
</p><p>The program generated for each test case consists of the student answer, with
the <i>public</i>&nbsp;attribute stripped if present. That (now local)
class definition is followed by a public <i>__Tester__&nbsp;</i>&nbsp;class that
has a <i>main</i>&nbsp;method that instantiates the Tester class and calls its
<i>runTests</i>&nbsp;method. The <i>runTests</i>&nbsp;method simply contains the
test case code. See the template for clarification.</p><p>It should be noted that
the algorithm used to strip the public attribute from the student-supplied class
is simplistic; it only works if the words <i>public class</i>&nbsp;exist exactly
once in the student code, separated by a single space.</p>
<p>The test case extra field is ignored.</p>
<p>This question type is inefficient if there are many test, as a separate
compile-and-execute job is sent to the sandbox for each test case. This could be
resolved by writing a combinator-style question type. See the coderunner
documentation (coderunner.org.nz) for more information.</p>";s:17:"qtype_java_method";s:603:"<p>Used for Java write-a-method questions where the
student is asked to write a method that is essentially a standalone function.
The author-supplied test is typically just one or two lines of code that
(apparently) just call the student supplied method, as in C. Under the hood, the
template constructs a Main class containing the student-supplied method
(and any other support methods, if they choose to write them) plus a 'runTests'
method that wraps the testcase(s). The main function for the class constructs an
instance of Main and calls its runTests method. See the template code for details.</p>";s:18:"qtype_java_program";s:715:"<p>A Java write-a-program question where the student
submits a complete program as their answer. The program is compiled and executed for each
test case. There is no test code, just stdin test data, though this isn't
actually checked: caveat emptor. The extra fields of the test cases are likewise
ignored.</p>
<p>This question type becomes very inefficient if there are many test cases, since
each one necessitates a full compile-and-execute cycle on the Jobe server. It is
possible to wrap all tests into a single Python job that is sent to the sandbox
server and compiles the program just once, then runs it on each test case.
For details of this approach, see the question author forum on
coderunner.org.nz.</p>";s:19:"qtype_multilanguage";s:642:"<p>A "write a program" style
of question in which the student can submit an answer in any of the
following languages: C, C++, Java, Python3. The student's question answer
box has a drop-down menu at the top, with which the student must select
the language in which their answer is written.</p>
<p>Further languages can be added, if supported on the Jobe server, by
adding the language name to the <i>AceLang</i> field of the question edit
form and then extending the template (q.v.) to handle the new language.</p>
<p>The submitted program code is run as-is for each test case. The testcode
and extra fields of each test case are ignored.</p>";s:12:"qtype_nodejs";s:536:"<p>A JavaScript question type, run using nodejs. The
test program to be executed starts with the student answer. That is followed
by each of the test case codes in turn, with a separator string being printed
between them. However, if there is any standard input present for any of the
test cases, a separate test run will be done for each test case.</p><p>
If there is a risk of side-effects from a test case affecting later test cases
you can add standard input to any one of the test cases to force the one-run-per-test-case
mode.</p>";s:21:"qtype_octave_function";s:598:"<p>A question type that specifies an
Octave function, which the student has to submit in its entirety. Each test
case will typically call the student function with test arguments and print
the result or some value derived from it. If there is no standard input present
in any of the questions, the program consists of the student answer, the
statement <code>format free</code> and the test code from each test case,
plus an extra <i>disp</i> statement to print a separator string between
test case outputs.</p><p>If there is any standard input present, each test
case is instead run separately.</p>";s:21:"qtype_pascal_function";s:331:"<p>A Pascal question type where the student
 is asked to write a procedure or function. The program to be run consists of
 the student answer followed by the CodeRunner <i>testcode</i> wrapped
 in <code>begin ... end.</code>.<br>
 This is not a combinator question type, so a separate jobe run will be done
 for each test case.</p>";s:20:"qtype_pascal_program";s:253:"<p>A Pascal question type where the student
 answer is a complete Pascal program. The program is compiled and run once for
 each test case, using the standard input provided in the test case and
 ignoring the <i>testcode</i> and <i>extra</i> fields.</p>";s:9:"qtype_php";s:801:"<p>A php question in which the student submission is
php code. In the simplest case, the student code will start with</p><pre>
&lt;?php
</pre>but <i>will not close the PHP tag</i>. The reason for the non-closure
can be seen by inspecting the template: the student answer is followed by each
of the test case test codes. If instead you wish the student code to end by
closing the PHP tag, you should edit the template to re-open the PHP tag before
the sequence of tests.
</p><p>The output from each test case, which should match the test case
<i>expected</i> field, will be the output from the student's PHP code
(including any content outside the scope of &lt;?php...?&gt; tags) plus the
output from the test code.</p><p>Inspect the template code (by clicking
<i>Customise</i>) to understand this.</p>";s:13:"qtype_python2";s:1083:"<p>A Python2 question type, which can handle
write-a-function, write-a-class or write-a-program question types. For each
test case, the student-answer code is executed followed by the test code.
Thus, for example, if the student is asked to write a function definition,
their definition will be executed first, followed by the author-supplied
test code, which will typically call the function and print the result or
some value derived from it.</p>
<p>If there are no standard inputs defined for all test cases, the question
actually wraps all the tests
into a single run, printing a separator string between each test case output.
Please be aware that this isn't necessarily the same as running each test
case separately. For example, if there are any global variables defined by
the student code, these will hold their values across the multiple runs.
If this is likely to prove a problem, the easiest work-around is to define
one of the test case standard input fields to be a non-empty value - this
forces CodeRunner into a fallback mode of running each test case separately.</p>";s:13:"qtype_python3";s:1083:"<p>A Python3 question type, which can handle
write-a-function, write-a-class or write-a-program question types. For each
test case, the student-answer code is executed followed by the test code.
Thus, for example, if the student is asked to write a function definition,
their definition will be executed first, followed by the author-supplied
test code, which will typically call the function and print the result or
some value derived from it.</p>
<p>If there are no standard inputs defined for all test cases, the question
actually wraps all the tests
into a single run, printing a separator string between each test case output.
Please be aware that this isn't necessarily the same as running each test
case separately. For example, if there are any global variables defined by
the student code, these will hold their values across the multiple runs.
If this is likely to prove a problem, the easiest work-around is to define
one of the test case standard input fields to be a non-empty value - this
forces CodeRunner into a fallback mode of running each test case separately.</p>";s:22:"qtype_undirected_graph";s:2786:"<p>A python3 question type that asks the student to draw
an undirected graph to satisfy some specification. The question author has to write
Python3 code to check the resulting graph.</p><p>Note that it is not actually
necessary to use this question type for undirected graphs, as the functionality
is mainly provided by the GraphUI plugin. If the graph pre-processing performed
by this question type does not suit your needs, you can instead just use a normal
Python3 question (or any other language), set the UI to GraphUI, and analyse
the JSON-serialised version of the graph (the Twig STUDENT_ANSWER&nbsp; variable)
yourself. However, this question type does provide an example of how to use the
GraphUI plugin. Click <i>Customise</i>&nbsp;to see the template code.</p>
<p>The specification will ask the student to draw an undirected graph to satisfy
certain requirements, e.g. a graph representation of a set of towns connected
by two-way roads. The test case code and/or the extra code will
then analyse the graph and print a message to the student, such as OK if the
graph is correct or a suitably informative error message otherwise.</p>
<p>The template for this question analyses the JSON-serialised graph, extracting
its topology in the form of an adjacency dictionary&nbsp;<i>graph</i>. This
variable is available to the test or extra code in the test case. Keys in the
dictionary are node names, if given, or arbitrary node identifying labels of
the form #1, #2 etc otherwise. Values in the dictionary are lists of edges,
sorted by neighbour node name or identifier, each edge being a tuple
(neighbourId, edgeLabel).</p><p>Each entry in the adjacency list is of the form
(nodeNameOrId, neighbours) where neighbours is a list of tuples
(neighbourNodeNameOrId, edgeLabel). If nodes are given names, those are used
as node identifiers, otherwise the names #1, #2 etc are used. The adjacency
list and the neighbour list are both sorted in order of node name or identifier.</p>
<p>The template is a combinator one: the <i>testcode</i>&nbsp;and
<i>extra</i>&nbsp;code are both executed for each test case.</p><p>As a simple
example, if the specification were just "Draw an undirected graph with two nodes
labelled A and B, with an edge between the two nodes", a suitable test case (albeit with
unhelpful error output) might be:</p><pre>
if set(graph.keys()) == {'A', 'B'} and len(graph['A']) == 1 and len(graph['B']) == 1 and graph['A'][0][0] == 'B':
    print('OK')
else:
    print('Nope')
</pre>
<p>Alternatively, there could be a set of test cases, each one checking
one of the aspects of the specification. For example, the first test case might
print the sorted keys, expecting to see 'A', 'B'. The second test case might
print the edges connected to node 'A', and so on.</p>";s:21:"qtype_python3_w_input";s:1905:"<p>A Python3 question type, which can handle
write-a-function, write-a-class or write-a-program question types. It differs
from the slightly simpler <i>python3</i> question type in that the usual
python3 <i>input</i> function is replaced with a custom version that echoes
standard input to standard output as it is consumed. This results in the output
mimicking that which is seen by students when testing with keyboard input.
It is recommended instead for the <i>python3</i> question type for any
questions that involve calls to <i>input</i> in introductory programming
courses, where students are likely to be confused by the non-echoing of
standard input when taken from a file.</p><p>A slight downside of this question
type compared to the <i>python3</i> question type is that any error messages
in the student code will have confusing line numbers, since the substitute
input function is inserted before the student code.</p>
<p>For each
test case, the student-answer code is executed followed by the test code.
Thus, for example, if the student is asked to write a function definition,
their definition will be executed first, followed by the author-supplied
test code, which will typically call the function and print the result or
some value derived from it.</p>
<p>If there are no standard inputs defined for all test cases, the question
actually wraps all the tests
into a single run, printing a separator string between each test case output.
Please be aware that this isn't necessarily the same as running each test
case separately. For example, if there are any global variables defined by
the student code, these will hold their values across the multiple runs.
If this is likely to prove a problem, the easiest work-around is to define
one of the test case standard input fields to be a non-empty value - this
forces CodeRunner into a fallback mode of running each test case separately.</p>";s:9:"qtype_sql";s:1108:"<p>A SQL question type, using sqlite3,
 run from Python3. sqlite3 must be installed on the Jobe server for this question
 type.</p>
 <p>The working directory is searched for files with an extension '.db'. If
 there is only one such file, it is used as the sqlite3 database for all tests.
 Multiple .db files currently issues an error message; a possible extension is
 to use different db files for each test, e.g. in sorted order.</p>
 <p>For each test, an sqlite3 command script of the form</p>
 <pre>.mode column<br>.headers on<br>&lt;code in extra&gt;<br>&lt;student answer&gt;<br>&lt;testcode&gt;</pre>
 <p>is run.</p>
 <p>A fresh copy of the db file is used for each test case.&nbsp;</p>
 <p>A template parameter <i>columnwidths</i>&nbsp;can be used to set the report
 column widths. By default sqlite3 sets each column width to be the maximum of
 three numbers: 10, the width of the header, and the width of the first row of data.
 A template string like</p><pre><code>{"columnwidths": [10, 50, 10, 5]}
</code></pre>
<p>will instead use column widths of 10, 50, 10 and 5 for the first four columns.</p>";s:9:"qtypehelp";s:21:"问题类型的帮助";s:18:"questioncheckboxes";s:6:"定制";s:23:"questioncheckboxes_help";s:281:"要自定义问题类型，例如 要编辑问题模板或沙箱参数，请单击'自定义'复选框，并阅读新显示的表单元素上的可用帮助以获取更多信息。

如果单击模板调试复选框，则为每个测试用例生成的程序将显示在输出中。";s:17:"questionloaderror";s:18:"加载问题失败";s:15:"questionpreview";s:12:"问题预览";s:12:"questiontype";s:12:"问题类型";s:21:"question_type_changed";s:110:"更改问题类型。 单击'确定'重新加载自定义字段，单击'取消'保留您的自定义字段。";s:17:"questiontype_help";s:543:"Select the particular type of question.

The combo-box selects one of the built-in types, each of which
specifies a particular language and, sometimes, a sandbox in which
the program will be executed. Each question type has a
template that defines how the executable program is built from the
testcase data and the student answer.

The template can be viewed and optionally customised by clicking
the 'Customise' checkbox.

If the template-debugging checkbox is clicked, the program generated
for each testcase will be displayed in the output.";s:19:"questiontypedetails";s:21:"问题类型的细节";s:21:"questiontype_required";s:30:"您必须选择问题的类型";s:15:"qWrongBehaviour";s:194:"Please use Adaptive Behaviour for all CodeRunner questions, or there can be massive performance hits. For example, all questions on a page will need to be regraded when the page is re-displayed.";s:11:"regexgrader";s:15:"正则表达式";s:19:"replacedollarscount";s:49:"This category contains {$a} CodeRunner questions.";s:22:"replaceexpectedwithgot";s:96:"Click on the &lt;&lt; button to replace the expected output of this testcase with actual output.";s:13:"resultcolumns";s:9:"结果栏";s:5:"reset";s:12:"重置答案";s:10:"resethover";s:51:"放弃更改并将答案重置为原始预加载值";s:18:"resultcolumnheader";s:6:"结果";s:18:"resultcolumns_help";s:1996:"By default the result table displays the testcode, stdin, expected and got
columns, provided the columns are not empty. You can change the default, and/or
the column headers by entering a value for the resultcolumns (leave blank for
the default behaviour).

If supplied, the resultcolumns field must be a
JSON-encoded list of column specifiers. Each column specifier is itself a list,
typically with just two or three elements. The first element is the column
header, the second element is the field from the TestResult object being
displayed in the column and the optional third element is an sprintf format
string used to display the field.

The fields available in the standard
TestResult object are: testcode, stdin, expected, got, extra, awarded, and mark.
testcode, stdin, expected and extra are the fields from the testcase while got
is the actual output generated and awarded and mark are the actual awarded mark
and the maximum mark for the testcase respsectively.

Per-test template-graders may
add their own fields, which can also be selected for display. It is also
possible to combine multiple fields into a column by adding extra fields to the
specifier: these must precede the sprintf format specifier, which then becomes
mandatory. For example, to display a Mark Fraction column in the form 0.74/1.00,
say, a column format specifier of ["Mark Fraction", "awarded", "mark",
"%.2f/%.2f"] could be used.

As a further special case, a format of %h means that
the test result field should be taken as ready-to-output HTML and should not be
subject to further processing; this is useful only with custom-grader templates
that generate HTML output, such as SVG graphics.

The default value of
resultcolumns is [["Test", "testcode"],["Input", "stdin"], ["Expected",
"expected"], ["Got", "got"]].

The setting of the resultcolumns field has no effect if a combinator template
grader is being used. The question author is then responsible for formatting
the result table in any desired way.";s:20:"resultcolumnsnotjson";s:45:"'结果'列字段不是有效的JSON字符串";s:20:"resultcolumnsnotlist";s:55:"结果列字段必须为列说明符的JSON编码列表";s:19:"resultcolumnspecbad";s:93:"碰到了无效的列说明符：每个列说明符必须是两个或更多字符串的列表";s:18:"resultstring-norun";s:12:"没有运行";s:29:"resultstring-compilationerror";s:12:"编译错误";s:25:"resultstring-runtimeerror";s:12:"运行错误";s:22:"resultstring-timelimit";s:21:"超过了时间限制";s:20:"resultstring-success";s:6:"成功";s:24:"resultstring-memorylimit";s:21:"超过了内存限制";s:27:"resultstring-illegalsyscall";s:21:"非法的函数调用";s:26:"resultstring-internalerror";s:32:"CR内部错误：请告诉老师";s:27:"resultstring-sandboxpending";s:38:"CR沙盒挂起错误：请告诉老师";s:26:"resultstring-sandboxpolicy";s:38:"CR沙盒策略错误：请告诉老师";s:28:"resultstring-sandboxoverload";s:61:"沙盒服务器过载。 也许很快再试一次会好了？";s:24:"resultstring-outputlimit";s:12:"输出过量";s:32:"resultstring-abnormaltermination";s:15:"非正常结束";s:10:"run_failed";s:24:"运行测试用例失败";s:23:"sampleanswerattachments";s:21:"例子答案的附件";s:28:"sampleanswerattachments_help";s:57:"如果示例答案需要附件文件，请在此处上传";s:15:"sandboxcontrols";s:6:"沙盒";s:20:"sandboxcontrols_help";s:1753:"选择用于运行学生提交内容的沙箱。
DEFAULT使用可用于所选语言的最高优先级沙箱。
由于Jobe已替换了所有沙箱类型，但已弃用的'ideonesandbox'除外，因此建议将值'jobesandbox'
正常使用，如果Jobe服务器关闭，则会产生更好的错误消息。

您还可设置每个测试用例运行所允许的最大CPU时间（以秒为单位）以及单个测试用例运行可以消耗
的最大内存（MB）。空白条目使用沙盒的默认值（CPU时间限制通常为5秒，内存量取决于语言），但
默认设置可能不适用于资源消耗大的程序。最大内存的0值不会导致任何限制。此处指定的内存量是运
行所需的总量，包括所有库，解释器，VM等。

'参数'用于传递其他沙盒特定的数据，例如编译选项和API密钥。通常应将其留空，但如果非空白，则必
须是有效的JSON格式记录。对于Jobe沙箱，可用属性包括disklimit，streamsize，numprocs，compileargs，
linkargs和解释器args。例如，对于C问题，<tt>{"compileargs":["-std=c89"]}</tt>将强制C89合规性，
将不使用其他C选项。有关详细信息，请参见Jobe文档。某些沙箱（如不建议使用的Ideone沙箱）可能会静
默忽略任何或所有这些设置。

如果沙箱设置为'jobesandbox'，则用于测试问题的Jobe主机通常是通过CodeRunner插件的管理员设置指
定的。但是，可以通过定义一个'jobeserver'参数以及一个可选的'jobeapikey'参数来选择其他Jobe服务
器。例如，如果'参数'字段设置为<tt>{"jobeserver": "myjobe.com"}</tt>，则将运行提交到服务器
'myjobe.com'。警告：此功能仍处于试验阶段，将来可能会更改。";s:12:"sandboxerror";s:55:"来自沙箱的错误： [{$a->sandbox}]: {$a->message}";s:13:"sandboxparams";s:6:"参数";s:32:"seethisquestioninthequestionbank";s:30:"在题库中看到这个问题";s:4:"SHOW";s:6:"显示";s:11:"showcolumns";s:12:"显示列：";s:16:"showcolumns_help";s:106:"选择结果表的哪些列应显示给学生。空列将被隐藏。
默认值适用于大多数用途。";s:11:"showdetails";s:12:"Show details";s:15:"showdifferences";s:12:"显示差异";s:10:"showsource";s:12:"模板调试";s:17:"sourcecodeallruns";s:39:"调试：所有测试运行的源代码";s:5:"stdin";s:12:"标准输入";s:10:"stdin_help";s:53:"测试的标准输入，模板显示为{{TEST.stdin}}";s:14:"student_answer";s:12:"学生答案";s:13:"submitbuttons";s:14:"Submit buttons";s:14:"supportscripts";s:12:"支持脚本";s:13:"syntax_errors";s:12:"语法错误";s:22:"tableui_num_rows_descr";s:105:"The (initial) number of rows in the table, excluding the top header row (if headers are given). Required.";s:25:"tableui_num_columns_descr";s:105:"The number of columns in the table, excluding the left-most label column (if labels are given). Required.";s:28:"tableui_column_headers_descr";s:41:"A list of strings for the column headers.";s:26:"tableui_dynamic_rows_descr";s:82:"If true, and "Add row" button is provided to allow users to add rows to the table.";s:24:"tableui_row_labels_descr";s:66:"A list of strings for the row labels, i.e. the values in column 0.";s:26:"tableui_locked_cells_descr";s:164:"A list of 2-element lists giving the 0-origin coordinates of cells that the user cannot alter. Coordinates do not include a possible header row or row-label column.";s:35:"tableui_column_width_percents_descr";s:154:"A list of floating point numbers giving the percentage of the available table width to allocate to the columns, including the row-label column if present.";s:28:"tableui_lines_per_cell_descr";s:45:"The number of text rows in each textarea/cell";s:32:"tableui_sync_interval_secs_descr";s:123:"The time interval in seconds between calls to sync the UI contents back to the question answer. 0 for no such auto-syncing.";s:20:"table_ui_invalidjson";s:36:"表格 UI: 非法的 JSON 序列化.";s:29:"table_ui_invalidserialisation";s:30:"表格 UI: 非法的序列化.";s:22:"table_ui_missingparams";s:61:"表UI需要模板参数table_num_columns和
table_num_rows。";s:8:"template";s:6:"模板";s:16:"template_changed";s:80:"'每用例'模板已更改-禁用组合方式？ ['取消'保持启用状态。]";s:16:"templatecontrols";s:12:"模板控件";s:21:"templatecontrols_help";s:2296:"Checking the 'Is combinator' checkbox
specifies that the template is a combinator template, which combines (or attempts
to combine) the student answer plus all test cases into a single run. If this
checkbox is checked, you will also need to define the value of the test_splitter_re
field, which is the PHP regular expression used to split the output from the
program run back into a set of individual test runs. However, you do not need
to define this if you're also using a template grader, as in that case the
template code is responsible for splitting the output itself, and grading it.

Combinator templates do not get passed a TEST Twig variable. Instead they
receive a variable TESTCASES, which is a list of all the tests in the
question. The program produced by the template is generally assumed to combine the
STUDENT_ANSWER and all the TESTCASES into a single program which, when it is run,
outputs the test results from each test case, separated by a unique string.
The separator string is defined by a regular expression given by the form
field 'test_splitter_re' below.

However, if testcases have standard input defined, combinator templates become
problematic. If the template constructs a single program, what should the standard
input be? The simplest (and default) solution is to
run the test cases one at a time, using the combinator template to build
each program, passing it a TESTCASES variable containing just a single test.
This 'trick' allows the combinator template to serve a dual role: it behaves
as a per-test-case template (with a 1-element TESTCASES array) when the question
author supplies standard input but as a proper combinator (with an n-element
TESTCASES array) otherwise. To change this behaviour so that the combinator
receives all testcases, even when stdin is present, check the 'Allow multiple
stdins' checkbox.

If a run of the combinator program results in any output to stderr, that
is interpreted as a run error. To ensure the student gets credit for as many
valid tests as possible, the system behaves as it does when standard input
is present, falling back to running each test separately. This does not
apply to combinator graders, however, which are required to deal with all
runtime errors themselves and must always return a valid JSON outcome.";s:13:"templateerror";s:12:"模板错误";s:14:"templategrader";s:15:"模板打分器";s:13:"template_help";s:1705:"模板定义针对指定学生答案和测试在沙箱中运行的程序。
模板有两种类型：

* '每用例'模板，用于定义要针对单个测试用例运行的程序，以及
* '组合'模板，用于定义将所有不同用例组合到单个程序中。

对于'每用例'模板，未选中'是组合的'复选框，而对组合模板则选中它。
该帮助面板的其余部分假定您使用的是'每用例'模板。有关使用组合模板的
信息，请参见完整文档。

模板由Twig模板引擎（请参阅http://twig.sensiolabs.org）处理，在处理的上下文中，
STUDENT_ANSWER是学生的答案，TEST.testcode是当前测试用例的代码。这些值（以及其
他测试用例值，例如TEST.expected，TEST.stdin，TEST.mark）可以通过将其括在双括号
中来插入模板中，例如<tt>{{TEST.testcode}}</tt>。为了在文字字符串中使用，应使用
适当的转义函数，例如<tt>{{STUDENT_ANSWER | e('py')}}</tt>是一种适用于Python
双三引号字符串的学生答案转义函数。其他转义函数是<tt>e('c')</tt>，<tt>e('java')</tt>，
<tt>e('matlab')</tt>。然后，使用所选内置类型的语言并将stdin设置为TEST.stdin编译并
执行Twig输出的程序。然后，该程序的输出将传递到所选的打分机。
有关更多信息，请参见'评分控件'下的帮助。

请注意，如果使用自定义的每用例模板，则每个测试用例都会有一个编译执行周期，而大多
数内置的问题类型会定义一个组合器模板，该模板将所有测试用例合并为一个运行。

如果单击'模板调试'复选框，则为每个测试用例生成的程序将显示在输出中。";s:14:"templateparams";s:12:"模板参数";s:24:"templateparamsevalpertry";s:20:"Evaluate per student";s:18:"templateparamslang";s:12:"Preprocessor";s:26:"templateparamsusingsandbox";s:239:"Preprocessors other than Twig use the sandbox server. When a student starts a quiz all such questions initiate a sandbox run before the question can even be displayed. In a test or exam, this can overload the sandbox server. Caveat emptor!";s:19:"templateparams_help";s:1072:"模板参数字段允许您将字符串参数传递到问题的模板。如果非空，则必须是JSON格式的记录。
然后可以在模板中使用记录的字段，这些字段显示为QUESTION.parameters.&lt;&lt;param&gt;&gt;。例如，如果模板参数是

        {"age": 23}

值23将被替换到模板中来代替模板变量<tt>{{ QUESTION.parameters.age }}</tt>。

传递到模板的模板参数集由原型中定义的任何模板参数以及合并的问题模板参数组成。因此，
问题参数可以覆盖原型参数，但不能删除它们。

模板参数还可用于提供问题内的随机性。首次实例化问题时，会将模板参数传递给Twig模板
引擎，以产生最终的JSON版本。
Twig的"随机"功能可用于为模板参数分配随机值。如果选中了"Twig全部"复选框，则问题还
将使用模板参数作为环境来处理问题的所有其他字段（问题文本，答案，测试用例等）。 这
可能导致不同的学生看到该问题的不同随机变体。有关详细信息，请参见文档。";s:12:"testalltitle";s:36:"在此上下文中测试所有问题";s:17:"testallincategory";s:36:"在这个类别中测试所有问题";s:8:"testcase";s:17:"测试用例 {$a}";s:16:"testcasecontrols";s:12:"测试属性";s:21:"testcasecontrols_help";s:545:"如果选中了'用作示例'，该测试将自动包含在问题的'例如：'结果表中。

'显示'组合框确定何时在结果表中向学生显示该测试用例。

如果选中了'如果失败则隐藏其余用例'并且该测试失败，则无论'Display'组合框的设置如
何，所有后续测试都将对学生隐藏。

'得分'设置该测试用例的值；仅当这不是一个'非满分即零蛋'问题时才有意义。

使用'排序'可以更改测试用例在保存时的顺序：此字段对测试用例进行排序。";s:9:"testcases";s:12:"测试用例";s:8:"testcode";s:12:"测试代码";s:10:"testcolhdr";s:6:"测试";s:15:"testingquestion";s:17:"测试问题 {$a}";s:14:"testsplitterre";s:36:"测试分隔串（正则表达式）";s:13:"testcode_help";s:48:"测试代码，模板显示为 {{TEST.testcode}}";s:8:"testtype";s:21:"预检查测试类型";s:13:"testtype_help";s:265:"如果启用了'预检查'并将其设置为'选定'，则此设置可控制是仅在常规
运行中，仅在进行预检查时还是在两次运行中都使用测试。
如果'预检查'设置为'选定'以外的任何其他设置，则此设置就被忽略了。";s:15:"testtype_normal";s:12:"只做检查";s:17:"testtype_precheck";s:15:"只做预检查";s:13:"testtype_both";s:6:"两种";s:8:"tooshort";s:54:"答案太短而没有意义，已经被无视忽略了";s:7:"twigall";s:13:"Twig所有的";s:12:"twigcontrols";s:10:"Twig控制";s:17:"twigcontrols_help";s:566:"模板参数通常在Twig扩展期间以{{QUESTION.parameters.someparam}}的形式引用。
 但是，如果选中了'提升模板参数'复选框，则将参数提升到Twig全局名称空间中，并可简单地以 {{someparam}}来引用。

传统上，Twig宏处理器仅应用于模板。现在，它也适用于模板参数，如果选中了'全部'，则使
用Twig扩展的模板参数作为环境，将其应用于问题文本，示例答案，答案预载和所有测试用例字段。
如果在模板参数中使用随机化，通常将需要打开TwigAll";s:9:"twigerror";s:15:"Twig错误 {$a}";s:15:"twigerrorintest";s:43:"在处理测试用例 {$a} 时的Twig错误";s:11:"type_header";s:14:"CR问题类型";s:8:"typename";s:15:"问题类型名";s:12:"typerequired";s:48:"请选择问题的类型（语言，格式等）";s:9:"uichanged";s:82:"UI changed. Save and reload page to see and edit available ui parameters (if any).";s:10:"uicontrols";s:17:"输入的UI控件";s:15:"uicontrols_help";s:2223:"选择学生答案的用户界面控制器和问题作者的模板。

学生答案下拉列表显示可用插件的列表。对于编程问题，通常使用Ace编辑器。

值'无'可用于仅提供原始文本框。
值'图式输入'为用户提供了一个简单的图形绘制用户界面，用于回答要求学生绘制某种规格的图
形的问题。这样的问题通常只有一个测试用例，并用一个模板进行评分，该模板将分析图形的序
列化表示形式，如果答案正确，则输出诸如'OK'之类的消息，否则将给出适当的错误信息。

可以在原型或实际问题中设置模板参数，以修改Graph插件的行为，如下所示：
{"isdirected": false}用于无向图； {"isfsm": true}允许没有起始节点的入
边，并允许双击节点以将其定义为接受状态；
{"noderadius": 30}，例如，以像素为单位设置不同的结点半径；
{"helpmenutext"："Line1\nLine2\nLine3"}将默认的帮助菜单替换为自定义版本。
实际问题中的模板参数与原型中的模板参数合并并覆盖（自CodeRunner V3.2.2起）。

还有一个'表格'用户界面元素，它显示供学生填写的文本区域表格。它由
'python3_程序测试'问题类型使用，该类型包含在github上的示例问题中。这需要
模板参数必需的table_num_rows和table_num_columns，和可选的table_column_headers
（用于标记列字符串的列表），table_row_labels（用于标记行字符串的列表）和
table_column_width_percents（用于分配给所有表宽的百分比列表）列，包括行标签列
（如果已指定））和table_locked_cells（用户无法更改的[行，列]对单元格的列表-行
和列的索引均为0，但不包括行标签的列或列）标题行）。

视力不佳的学生或希望检查序列化的作者（例如，了解Graph UI使用的表示形式）可以通
过键入Ctrl-Alt-M来切换当前页面上所有UI插件的使用。

为学生答案选择的任何值也将在'示例答案'和'答案预载'字段的编辑器表单中使用。

如果选中'模板使用ace'，则Ace代码编辑器将同时管理模板和模板参数框。否则，将使用
原始文本框。";s:11:"ui_fallback";s:33:"退回到使用原始文本区。";s:16:"uiparametergroup";s:13:"UI parameters";s:21:"uiparametergroup_help";s:217:"A JSON string defining any User Interface
parameter values that are either required by the UI plugin or which override the
default values. For example, to draw larger nodes when using the GraphUI: '{"noderadius": 30}'";s:12:"uiparameters";s:20:"UI parameters (JSON)";s:20:"uiparametertablehead";s:52:"The {$a->uiname} UI takes the following parameters: ";s:11:"uiparamname";s:4:"Name";s:11:"uiparamdesc";s:11:"Description";s:14:"uiparamdefault";s:7:"Default";s:20:"unauthorisedbulktest";s:37:"您无权访问任何CodeRunner问题";s:20:"unauthoriseddbaccess";s:24:"您无权使用此脚本";s:12:"unknownerror";s:81:"一个意料之外的问题发生了。沙箱可能已关闭。请稍后重试。";s:28:"unknowncombinatorgraderfield";s:60:"组合打分输出中的未知字段名称 ({$a->fieldname})";s:15:"unknownuiplugin";s:66:"Information on an unknown plugin ({$a->pluginname}) was requested.";s:17:"unserializefailed";s:70:"存储的测试结果无法反序列化。 也许尝试再次打分？";s:12:"useasexample";s:12:"用作示例";s:6:"useace";s:15:"模板使用ACE";s:14:"validateonsave";s:15:"保存时验证";s:20:"wrongnumberofformats";s:75:"测试结果列格式数量错误。 预期{$a->expected}，得到{$a->got}";s:24:"xmlcoderunnerformaterror";s:37:"Coderunner问题中的XML格式错误";}